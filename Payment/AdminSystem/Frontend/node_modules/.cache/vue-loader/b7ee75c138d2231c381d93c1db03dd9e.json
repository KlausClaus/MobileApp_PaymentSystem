{"remainingRequest":"D:\\GItHubProjects\\MobileApp_PaymentSystem\\Payment\\AdminSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GItHubProjects\\MobileApp_PaymentSystem\\Payment\\AdminSystem\\Frontend\\src\\views\\dentify.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\GItHubProjects\\MobileApp_PaymentSystem\\Payment\\AdminSystem\\Frontend\\src\\views\\dentify.vue","mtime":1731935290714},{"path":"D:\\GItHubProjects\\MobileApp_PaymentSystem\\Payment\\AdminSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GItHubProjects\\MobileApp_PaymentSystem\\Payment\\AdminSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\GItHubProjects\\MobileApp_PaymentSystem\\Payment\\AdminSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GItHubProjects\\MobileApp_PaymentSystem\\Payment\\AdminSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiU0lkZW50aWZ5IiwKICBwcm9wczogewogICAgLy8gVmVyaWZpY2F0aW9uIGNvZGUgc3RyaW5nCiAgICBpZGVudGlmeUNvZGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiMTIzNCIsIC8vIERlZmF1bHQgdmVyaWZpY2F0aW9uIGNvZGUKICAgIH0sCiAgICAvLyBNaW5pbXVtIGZvbnQgc2l6ZQogICAgZm9udFNpemVNaW46IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAyNSwKICAgIH0sCiAgICAvLyBNYXhpbXVtIGZvbnQgc2l6ZQogICAgZm9udFNpemVNYXg6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAzNSwKICAgIH0sCiAgICAvLyBNaW5pbXVtIGJhY2tncm91bmQgY29sb3IgdmFsdWUKICAgIGJhY2tncm91bmRDb2xvck1pbjogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDIwMCwKICAgIH0sCiAgICAvLyBNYXhpbXVtIGJhY2tncm91bmQgY29sb3IgdmFsdWUKICAgIGJhY2tncm91bmRDb2xvck1heDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDIyMCwKICAgIH0sCiAgICAvLyBNaW5pbXVtIGNvbG9yIHZhbHVlIGZvciBpbnRlcmZlcmVuY2UgZG90cwogICAgZG90Q29sb3JNaW46IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiA2MCwKICAgIH0sCiAgICAvLyBNYXhpbXVtIGNvbG9yIHZhbHVlIGZvciBpbnRlcmZlcmVuY2UgZG90cwogICAgZG90Q29sb3JNYXg6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAxMjAsCiAgICB9LAogICAgLy8gV2lkdGggb2YgdGhlIGNhbnZhcwogICAgY29udGVudFdpZHRoOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogOTAsCiAgICB9LAogICAgLy8gSGVpZ2h0IG9mIHRoZSBjYW52YXMKICAgIGNvbnRlbnRIZWlnaHQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAzOCwKICAgIH0sCiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyBHZW5lcmF0ZXMgYSByYW5kb20gaW50ZWdlciB3aXRoaW4gdGhlIHNwZWNpZmllZCByYW5nZQogICAgcmFuZG9tTnVtKG1pbiwgbWF4KSB7CiAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSArIG1pbik7CiAgICB9LAoKICAgIC8vIEdlbmVyYXRlcyBhIHJhbmRvbSBSR0IgY29sb3Igd2l0aGluIHRoZSBzcGVjaWZpZWQgcmFuZ2UKICAgIHJhbmRvbUNvbG9yKG1pbiwgbWF4KSB7CiAgICAgIGNvbnN0IHIgPSB0aGlzLnJhbmRvbU51bShtaW4sIG1heCk7CiAgICAgIGNvbnN0IGcgPSB0aGlzLnJhbmRvbU51bShtaW4sIG1heCk7CiAgICAgIGNvbnN0IGIgPSB0aGlzLnJhbmRvbU51bShtaW4sIG1heCk7CiAgICAgIHJldHVybiBgcmdiKCR7cn0sICR7Z30sICR7Yn0pYDsKICAgIH0sCgogICAgLy8gRHJhdyB0aGUgY2FwdGNoYSBvbiB0aGUgY2FudmFzCiAgICBkcmF3UGljKCkgewogICAgICBjb25zdCBjYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicy1jYW52YXMiKTsKICAgICAgY29uc3QgY3R4ID0gY2FudmFzLmdldENvbnRleHQoIjJkIik7CiAgICAgIGN0eC50ZXh0QmFzZWxpbmUgPSAiYm90dG9tIjsKCiAgICAgIC8vIERyYXcgdGhlIGJhY2tncm91bmQKICAgICAgY3R4LmZpbGxTdHlsZSA9ICIjZTZlY2ZkIjsKICAgICAgY3R4LmZpbGxSZWN0KDAsIDAsIHRoaXMuY29udGVudFdpZHRoLCB0aGlzLmNvbnRlbnRIZWlnaHQpOwoKICAgICAgLy8gRHJhdyB0aGUgdmVyaWZpY2F0aW9uIGNvZGUgY2hhcmFjdGVycwogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuaWRlbnRpZnlDb2RlLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdGhpcy5kcmF3VGV4dChjdHgsIHRoaXMuaWRlbnRpZnlDb2RlW2ldLCBpKTsKICAgICAgfQoKICAgICAgLy8gQWRkIGludGVyZmVyZW5jZSBsaW5lcyBhbmQgZG90cwogICAgICB0aGlzLmRyYXdMaW5lKGN0eCk7CiAgICAgIHRoaXMuZHJhd0RvdChjdHgpOwogICAgfSwKCiAgICAvLyBEcmF3IGluZGl2aWR1YWwgdGV4dCBjaGFyYWN0ZXJzIG9uIHRoZSBjYW52YXMKICAgIGRyYXdUZXh0KGN0eCwgdHh0LCBpKSB7CiAgICAgIGN0eC5maWxsU3R5bGUgPSB0aGlzLnJhbmRvbUNvbG9yKDUwLCAxNjApOyAvLyBSYW5kb20gdGV4dCBjb2xvcgogICAgICBjdHguZm9udCA9IGAke3RoaXMucmFuZG9tTnVtKHRoaXMuZm9udFNpemVNaW4sIHRoaXMuZm9udFNpemVNYXgpfXB4IFNpbUhlaWA7IC8vIFJhbmRvbSBmb250IHNpemUKCiAgICAgIGNvbnN0IHggPSAoaSArIDEpICogKHRoaXMuY29udGVudFdpZHRoIC8gKHRoaXMuaWRlbnRpZnlDb2RlLmxlbmd0aCArIDEpKTsKICAgICAgY29uc3QgeSA9IHRoaXMucmFuZG9tTnVtKHRoaXMuZm9udFNpemVNYXgsIHRoaXMuY29udGVudEhlaWdodCAtIDUpOwogICAgICBjb25zdCBkZWcgPSB0aGlzLnJhbmRvbU51bSgtMzAsIDMwKTsgLy8gUmFuZG9tIHJvdGF0aW9uIGFuZ2xlCgogICAgICAvLyBUcmFuc2xhdGUgYW5kIHJvdGF0ZSB0aGUgY2FudmFzIGZvciB0aGUgdGV4dAogICAgICBjdHgudHJhbnNsYXRlKHgsIHkpOwogICAgICBjdHgucm90YXRlKChkZWcgKiBNYXRoLlBJKSAvIDE4MCk7CiAgICAgIGN0eC5maWxsVGV4dCh0eHQsIDAsIDApOwoKICAgICAgLy8gUmVzZXQgdGhlIGNhbnZhcyB0cmFuc2Zvcm1hdGlvbnMKICAgICAgY3R4LnJvdGF0ZSgoLWRlZyAqIE1hdGguUEkpIC8gMTgwKTsKICAgICAgY3R4LnRyYW5zbGF0ZSgteCwgLXkpOwogICAgfSwKCiAgICAvLyBEcmF3IGludGVyZmVyZW5jZSBsaW5lcyBvbiB0aGUgY2FudmFzCiAgICBkcmF3TGluZShjdHgpIHsKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA0OyBpKyspIHsKICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSB0aGlzLnJhbmRvbUNvbG9yKDEwMCwgMjAwKTsKICAgICAgICBjdHguYmVnaW5QYXRoKCk7CiAgICAgICAgY3R4Lm1vdmVUbygKICAgICAgICAgICAgdGhpcy5yYW5kb21OdW0oMCwgdGhpcy5jb250ZW50V2lkdGgpLAogICAgICAgICAgICB0aGlzLnJhbmRvbU51bSgwLCB0aGlzLmNvbnRlbnRIZWlnaHQpCiAgICAgICAgKTsKICAgICAgICBjdHgubGluZVRvKAogICAgICAgICAgICB0aGlzLnJhbmRvbU51bSgwLCB0aGlzLmNvbnRlbnRXaWR0aCksCiAgICAgICAgICAgIHRoaXMucmFuZG9tTnVtKDAsIHRoaXMuY29udGVudEhlaWdodCkKICAgICAgICApOwogICAgICAgIGN0eC5zdHJva2UoKTsKICAgICAgfQogICAgfSwKCiAgICAvLyBEcmF3IGludGVyZmVyZW5jZSBkb3RzIG9uIHRoZSBjYW52YXMKICAgIGRyYXdEb3QoY3R4KSB7CiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMzA7IGkrKykgewogICAgICAgIGN0eC5maWxsU3R5bGUgPSB0aGlzLnJhbmRvbUNvbG9yKDAsIDI1NSk7CiAgICAgICAgY3R4LmJlZ2luUGF0aCgpOwogICAgICAgIGN0eC5hcmMoCiAgICAgICAgICAgIHRoaXMucmFuZG9tTnVtKDAsIHRoaXMuY29udGVudFdpZHRoKSwKICAgICAgICAgICAgdGhpcy5yYW5kb21OdW0oMCwgdGhpcy5jb250ZW50SGVpZ2h0KSwKICAgICAgICAgICAgMSwKICAgICAgICAgICAgMCwKICAgICAgICAgICAgMiAqIE1hdGguUEkKICAgICAgICApOwogICAgICAgIGN0eC5maWxsKCk7CiAgICAgIH0KICAgIH0sCiAgfSwKICB3YXRjaDogewogICAgLy8gV2F0Y2ggZm9yIGNoYW5nZXMgaW4gdGhlIHZlcmlmaWNhdGlvbiBjb2RlIGFuZCByZWRyYXcgdGhlIGNhbnZhcwogICAgaWRlbnRpZnlDb2RlKCkgewogICAgICB0aGlzLmRyYXdQaWMoKTsKICAgIH0sCiAgfSwKICBtb3VudGVkKCkgewogICAgLy8gRHJhdyB0aGUgY2FwdGNoYSB3aGVuIHRoZSBjb21wb25lbnQgaXMgbW91bnRlZAogICAgdGhpcy5kcmF3UGljKCk7CiAgfSwKfTsK"},{"version":3,"sources":["dentify.vue"],"names":[],"mappings":";AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"dentify.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"s-canvas\">\n    <canvas\n        id=\"s-canvas\"\n        :width=\"contentWidth\"\n        :height=\"contentHeight\"\n    ></canvas>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"SIdentify\",\n  props: {\n    // Verification code string\n    identifyCode: {\n      type: String,\n      default: \"1234\", // Default verification code\n    },\n    // Minimum font size\n    fontSizeMin: {\n      type: Number,\n      default: 25,\n    },\n    // Maximum font size\n    fontSizeMax: {\n      type: Number,\n      default: 35,\n    },\n    // Minimum background color value\n    backgroundColorMin: {\n      type: Number,\n      default: 200,\n    },\n    // Maximum background color value\n    backgroundColorMax: {\n      type: Number,\n      default: 220,\n    },\n    // Minimum color value for interference dots\n    dotColorMin: {\n      type: Number,\n      default: 60,\n    },\n    // Maximum color value for interference dots\n    dotColorMax: {\n      type: Number,\n      default: 120,\n    },\n    // Width of the canvas\n    contentWidth: {\n      type: Number,\n      default: 90,\n    },\n    // Height of the canvas\n    contentHeight: {\n      type: Number,\n      default: 38,\n    },\n  },\n  methods: {\n    // Generates a random integer within the specified range\n    randomNum(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    },\n\n    // Generates a random RGB color within the specified range\n    randomColor(min, max) {\n      const r = this.randomNum(min, max);\n      const g = this.randomNum(min, max);\n      const b = this.randomNum(min, max);\n      return `rgb(${r}, ${g}, ${b})`;\n    },\n\n    // Draw the captcha on the canvas\n    drawPic() {\n      const canvas = document.getElementById(\"s-canvas\");\n      const ctx = canvas.getContext(\"2d\");\n      ctx.textBaseline = \"bottom\";\n\n      // Draw the background\n      ctx.fillStyle = \"#e6ecfd\";\n      ctx.fillRect(0, 0, this.contentWidth, this.contentHeight);\n\n      // Draw the verification code characters\n      for (let i = 0; i < this.identifyCode.length; i++) {\n        this.drawText(ctx, this.identifyCode[i], i);\n      }\n\n      // Add interference lines and dots\n      this.drawLine(ctx);\n      this.drawDot(ctx);\n    },\n\n    // Draw individual text characters on the canvas\n    drawText(ctx, txt, i) {\n      ctx.fillStyle = this.randomColor(50, 160); // Random text color\n      ctx.font = `${this.randomNum(this.fontSizeMin, this.fontSizeMax)}px SimHei`; // Random font size\n\n      const x = (i + 1) * (this.contentWidth / (this.identifyCode.length + 1));\n      const y = this.randomNum(this.fontSizeMax, this.contentHeight - 5);\n      const deg = this.randomNum(-30, 30); // Random rotation angle\n\n      // Translate and rotate the canvas for the text\n      ctx.translate(x, y);\n      ctx.rotate((deg * Math.PI) / 180);\n      ctx.fillText(txt, 0, 0);\n\n      // Reset the canvas transformations\n      ctx.rotate((-deg * Math.PI) / 180);\n      ctx.translate(-x, -y);\n    },\n\n    // Draw interference lines on the canvas\n    drawLine(ctx) {\n      for (let i = 0; i < 4; i++) {\n        ctx.strokeStyle = this.randomColor(100, 200);\n        ctx.beginPath();\n        ctx.moveTo(\n            this.randomNum(0, this.contentWidth),\n            this.randomNum(0, this.contentHeight)\n        );\n        ctx.lineTo(\n            this.randomNum(0, this.contentWidth),\n            this.randomNum(0, this.contentHeight)\n        );\n        ctx.stroke();\n      }\n    },\n\n    // Draw interference dots on the canvas\n    drawDot(ctx) {\n      for (let i = 0; i < 30; i++) {\n        ctx.fillStyle = this.randomColor(0, 255);\n        ctx.beginPath();\n        ctx.arc(\n            this.randomNum(0, this.contentWidth),\n            this.randomNum(0, this.contentHeight),\n            1,\n            0,\n            2 * Math.PI\n        );\n        ctx.fill();\n      }\n    },\n  },\n  watch: {\n    // Watch for changes in the verification code and redraw the canvas\n    identifyCode() {\n      this.drawPic();\n    },\n  },\n  mounted() {\n    // Draw the captcha when the component is mounted\n    this.drawPic();\n  },\n};\n</script>\n\n"]}]}