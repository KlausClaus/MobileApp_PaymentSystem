{"remainingRequest":"C:\\Users\\klaus\\Downloads\\MobileApp_PaymentSystem-Alternate-documents\\MobileApp_PaymentSystem-Alternate-documents\\Payment\\AdminSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\klaus\\Downloads\\MobileApp_PaymentSystem-Alternate-documents\\MobileApp_PaymentSystem-Alternate-documents\\Payment\\AdminSystem\\Frontend\\src\\views\\Analysis.vue?vue&type=style&index=0&id=688411d4&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\klaus\\Downloads\\MobileApp_PaymentSystem-Alternate-documents\\MobileApp_PaymentSystem-Alternate-documents\\Payment\\AdminSystem\\Frontend\\src\\views\\Analysis.vue","mtime":1731236695786},{"path":"C:\\Users\\klaus\\Downloads\\MobileApp_PaymentSystem-Alternate-documents\\MobileApp_PaymentSystem-Alternate-documents\\Payment\\AdminSystem\\Frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\klaus\\Downloads\\MobileApp_PaymentSystem-Alternate-documents\\MobileApp_PaymentSystem-Alternate-documents\\Payment\\AdminSystem\\Frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\klaus\\Downloads\\MobileApp_PaymentSystem-Alternate-documents\\MobileApp_PaymentSystem-Alternate-documents\\Payment\\AdminSystem\\Frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\klaus\\Downloads\\MobileApp_PaymentSystem-Alternate-documents\\MobileApp_PaymentSystem-Alternate-documents\\Payment\\AdminSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\klaus\\Downloads\\MobileApp_PaymentSystem-Alternate-documents\\MobileApp_PaymentSystem-Alternate-documents\\Payment\\AdminSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jb250YWluZXIgewogIGRpc3BsYXk6IGdyaWQ7CiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyOwogIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDFmcjsKICBnYXA6IDEwcHg7CiAgaGVpZ2h0OiAxMDAlOwogIHdpZHRoOiAxMDAlOwogIG1heC13aWR0aDogMTAwdnc7CiAgbWF4LWhlaWdodDogMTAwdmg7CiAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICBwYWRkaW5nOiAxMHB4Owp9CgoucXVhZHJhbnQgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBmb250LXNpemU6IDI0cHg7CiAgYm9yZGVyOiAxcHggc29saWQgI2NjYzsKICBvdmVyZmxvdzogaGlkZGVuOwp9CgoudG9wLWxlZnQgewp9CgoudG9wLXJpZ2h0IHsKfQoKLmJvdHRvbS1sZWZ0IHsKfQoKLmJvdHRvbS1yaWdodCB7Cn0KCi5lY2hhcnQgewogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogMTAwJTsKfQo="},{"version":3,"sources":["Analysis.vue"],"names":[],"mappings":";AAiPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","file":"Analysis.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"quadrant top-left\">\n      <div class=\"echart\" id=\"myChart\"></div>\n    </div>\n    <div class=\"quadrant top-right\"><div class=\"echart\" id=\"myChart1\"></div></div>\n    <div class=\"quadrant bottom-left\"><div class=\"echart\" id=\"myChart2\"></div></div>\n    <div class=\"quadrant bottom-right\"><div class=\"echart\" id=\"myChart3\"></div></div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts';\n\nexport default {\n  name: 'QuadrantLayout',\n  data() {\n    return {\n      paymentData: [],\n    };\n  },\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    fetchData() {\n      this.request.get(\"/tuitionInvoice/list\").then(res => {\n        this.paymentData = res.data;\n        console.log(this.paymentData)\n        this.initChart();\n        this.initLineChart();\n        this.initScatterChart();\n        this.initPieChart();\n      });\n    },\n    initChart() {\n      const chartDom = document.getElementById('myChart');\n      const myChart = echarts.init(chartDom);\n\n      const paidCount = this.paymentData.filter(item => item.status === 1).length;\n      const unpaidCount = this.paymentData.filter(item => item.status === 0).length;\n      console.log(paidCount)\n      const option = {\n        title: {\n          text: 'Tuition payment status statistics',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        xAxis: {\n          type: 'category',\n          data: ['paid', 'non-payment']\n        },\n        yAxis: {\n          type: 'value',\n          minInterval: 1\n        },\n        series: [\n          {\n            name: 'Number of people',\n            type: 'bar',\n            data: [paidCount, unpaidCount],\n            itemStyle: {\n              color: function(params) {\n                return params.dataIndex === 0 ? '#91cc75' : '#ee6666';\n              }\n            }\n          }\n        ]\n      };\n\n      option && myChart.setOption(option);\n\n      // 响应式调整\n      window.addEventListener('resize', function() {\n        myChart.resize();\n      });\n    },\n    initLineChart() {\n      const chartDom = document.getElementById('myChart1');\n      const myChart = echarts.init(chartDom);\n\n      const feeRanges = [\n        { min: 0, max: 1000, count: 0 },\n        { min: 1000, max: 2000, count: 0 },\n        { min: 2000, max: 3000, count: 0 },\n        { min: 3000, max: 4000, count: 0 },\n        { min: 4000, max: Infinity, count: 0 }\n      ];\n\n      this.paymentData.forEach(item => {\n        const fee = item.totalFee;\n        const range = feeRanges.find(range => fee >= range.min && fee < range.max);\n        if (range) range.count++;\n      });\n\n      const option = {\n        title: {\n          text: 'Single payment',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          data: ['<1000', '1000-2000', '2000-3000', '3000-4000', '>4000']\n        },\n        yAxis: {\n          type: 'value',\n          minInterval: 1\n        },\n        series: [\n          {\n            name: 'Number of students',\n            type: 'line',\n            data: feeRanges.map(range => range.count),\n            smooth: true\n          }\n        ]\n      };\n\n      myChart.setOption(option);\n      window.addEventListener('resize', () => myChart.resize());\n    },\n    initScatterChart() {\n      const chartDom = document.getElementById('myChart2');\n      const myChart = echarts.init(chartDom);\n\n      const paymentDelays = this.paymentData\n          .filter(item => item.status === 1 && item.createdTime && item.paymentTime)\n          .map(item => {\n            const createdDate = new Date(item.createdTime);\n            const paymentDate = new Date(item.paymentTime);\n            const daysToPayment = Math.round((paymentDate - createdDate) / (1000 * 60 * 60 * 24));\n            return [daysToPayment, item.totalFee, item.studentName];\n          });\n\n      const option = {\n        title: {\n          text: 'Student payment time distribution',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: function (params) {\n            return `student: ${params.data[2]}<br/>Delay in payment: ${params.data[0]}day<br/>Tuition fee: ${params.data[1]}`;\n          }\n        },\n        xAxis: {\n          type: 'value',\n          name: 'Payment delay (days)',\n          nameLocation: 'middle',\n          nameGap: 30\n        },\n        yAxis: {\n          type: 'value',\n          name: 'Tuition Fee',\n          nameLocation: 'middle',\n          nameGap: 30\n        },\n        series: [\n          {\n            name: 'Time of payment',\n            type: 'scatter',\n            data: paymentDelays,\n            symbolSize: function (data) {\n              return Math.sqrt(data[0]) * 2 + 5; // 根据付款延迟调整点的大小\n            },\n            itemStyle: {\n              color: function (params) {\n                const delay = params.data[0];\n                if (delay <= 7) return '#91cc75'; // 一周内\n                if (delay <= 30) return '#fac858'; // 一个月内\n                return '#ee6666'; // 超过一个月\n              }\n            }\n          }\n        ]\n      };\n\n      myChart.setOption(option);\n      window.addEventListener('resize', () => myChart.resize());\n    },\n    initPieChart() {\n      const chartDom = document.getElementById('myChart3');\n      const myChart = echarts.init(chartDom);\n\n      // 统计不同支付方式的人数\n      const paymentMethods = {};\n      this.paymentData.forEach(item => {\n        if (item.paymentMethod) {\n          paymentMethods[item.paymentMethod] = (paymentMethods[item.paymentMethod] || 0) + 1;\n        }\n      });\n\n      // 转换数据格式为ECharts所需的格式\n      const pieData = Object.entries(paymentMethods).map(([name, value]) => ({ name, value }));\n\n      const option = {\n        title: {\n          text: 'Payment method statistics',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left'\n        },\n        series: [\n          {\n            name: 'Payment method',\n            type: 'pie',\n            radius: '50%',\n            data: pieData,\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }\n        ]\n      };\n\n      myChart.setOption(option);\n      window.addEventListener('resize', () => myChart.resize());\n    }\n  }\n};\n</script>\n\n<style scoped>\n.container {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n  gap: 10px;\n  height: 100%;\n  width: 100%;\n  max-width: 100vw;\n  max-height: 100vh;\n  box-sizing: border-box;\n  padding: 10px;\n}\n\n.quadrant {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 24px;\n  border: 1px solid #ccc;\n  overflow: hidden;\n}\n\n.top-left {\n}\n\n.top-right {\n}\n\n.bottom-left {\n}\n\n.bottom-right {\n}\n\n.echart {\n  width: 100%;\n  height: 100%;\n}\n</style>\n"]}]}