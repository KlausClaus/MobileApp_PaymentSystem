{"remainingRequest":"D:\\GItHubProjects\\MobileApp_PaymentSystem\\Payment\\AdminSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GItHubProjects\\MobileApp_PaymentSystem\\Payment\\AdminSystem\\Frontend\\src\\views\\Student.vue?vue&type=style&index=0&id=1a544371&lang=css&","dependencies":[{"path":"D:\\GItHubProjects\\MobileApp_PaymentSystem\\Payment\\AdminSystem\\Frontend\\src\\views\\Student.vue","mtime":1731935725650},{"path":"D:\\GItHubProjects\\MobileApp_PaymentSystem\\Payment\\AdminSystem\\Frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GItHubProjects\\MobileApp_PaymentSystem\\Payment\\AdminSystem\\Frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\GItHubProjects\\MobileApp_PaymentSystem\\Payment\\AdminSystem\\Frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\GItHubProjects\\MobileApp_PaymentSystem\\Payment\\AdminSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GItHubProjects\\MobileApp_PaymentSystem\\Payment\\AdminSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5zdHVkZW50LWNvbnRhaW5lciB7CiAgcGFkZGluZzogMjBweDsKfQoKLyogSGVhZGVyIGFjdGlvbnMgc3R5bGluZyAqLwouaGVhZGVyLWFjdGlvbnMgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKLnNlYXJjaC1iYXIgewogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBnYXA6IDEwcHg7Cn0KCi5zZWFyY2gtaW5wdXQgewogIHdpZHRoOiAzMDBweDsKfQoKLm9wZXJhdGlvbi1idXR0b25zIHsKICBkaXNwbGF5OiBmbGV4OwogIGdhcDogMTBweDsKfQoKLyogVGFibGUgc3R5bGluZyAqLwouc3R1ZGVudC10YWJsZSB7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKfQoKLyogUGFnaW5hdGlvbiBzdHlsaW5nICovCi5wYWdpbmF0aW9uIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIG1hcmdpbi10b3A6IDIwcHg7Cn0KCi8qIFRhYmxlIGhlYWRlciBiYWNrZ3JvdW5kICovCi5oZWFkZXJCZyB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjdmYSAhaW1wb3J0YW50Owp9CgovKiBCdXR0b24gaG92ZXIgZWZmZWN0cyAqLwouZWwtYnV0dG9uIHsKICB0cmFuc2l0aW9uOiBhbGwgMC4zczsKfQoKLmVsLWJ1dHRvbjpob3ZlciB7CiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xcHgpOwogIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMSk7Cn0KCi8qIEZvcm0gc3R5bGluZyAqLwouZWwtZGlhbG9nX19ib2R5IHsKICBwYWRkaW5nOiAyMHB4IDMwcHg7Cn0KCi5lbC1mb3JtLWl0ZW0gewogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KCi8qIFJlc3BvbnNpdmUgbGF5b3V0ICovCkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7CiAgLmhlYWRlci1hY3Rpb25zIHsKICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgICBhbGlnbi1pdGVtczogc3RyZXRjaDsKICAgIGdhcDogMTBweDsKICB9CgogIC5zZWFyY2gtYmFyIHsKICAgIHdpZHRoOiAxMDAlOwogIH0KCiAgLnNlYXJjaC1pbnB1dCB7CiAgICBmbGV4OiAxOwogIH0KCiAgLm9wZXJhdGlvbi1idXR0b25zIHsKICAgIHdpZHRoOiAxMDAlOwogICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsKICB9Cn0K"},{"version":3,"sources":["Student.vue"],"names":[],"mappings":";AAoVA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Student.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"student-container\">\n    <!-- Search and Actions Section -->\n    <div class=\"header-actions\">\n      <div class=\"search-bar\">\n        <el-input\n            v-model=\"name\"\n            placeholder=\"Please enter the student name\"\n            prefix-icon=\"el-icon-search\"\n            clearable\n            class=\"search-input\"\n        ></el-input>\n        <el-button type=\"primary\" @click=\"load\">Search</el-button>\n        <el-button type=\"warning\" @click=\"reset\">Reset</el-button>\n      </div>\n\n      <div class=\"operation-buttons\">\n        <el-button\n            type=\"primary\"\n            icon=\"el-icon-plus\"\n            @click=\"dialogFormVisible = true\"\n        >\n          Add Student Information\n        </el-button>\n\n        <el-popconfirm\n            confirm-button-text=\"OK\"\n            cancel-button-text=\"Let me think it over\"\n            icon=\"el-icon-info\"\n            icon-color=\"red\"\n            title=\"Are you sure about deleting this data?\"\n            @confirm=\"deleteMore\"\n        >\n          <el-button\n              slot=\"reference\"\n              type=\"danger\"\n              icon=\"el-icon-delete\"\n              :disabled=\"!multipleSelection.length\"\n          >\n            Batch Deletion\n          </el-button>\n        </el-popconfirm>\n      </div>\n    </div>\n\n    <!-- Table Section -->\n    <el-table\n        :data=\"tableData\"\n        border\n        stripe\n        :header-cell-class-name=\"'headerBg'\"\n        class=\"student-table\"\n        @selection-change=\"handleSelectionChange\"\n    >\n      <el-table-column type=\"selection\"></el-table-column>\n      <el-table-column prop=\"id\" label=\"ID\"></el-table-column>\n      <el-table-column prop=\"name\" label=\"Name\"></el-table-column>\n      <el-table-column prop=\"email\" label=\"Email\"></el-table-column>\n      <el-table-column prop=\"grade\" label=\"Grade\"></el-table-column>\n      <el-table-column prop=\"gender\" label=\"Gender\"></el-table-column>\n      <el-table-column prop=\"professional\" label=\"Major\"></el-table-column>\n      <el-table-column label=\"Actions\" width=\"200\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"success\" size=\"mini\" @click=\"handleEdit(scope.row)\">\n            Edit <i class=\"el-icon-edit\"></i>\n          </el-button>\n          <el-popconfirm\n              confirm-button-text=\"OK\"\n              cancel-button-text=\"Let me think it over\"\n              icon=\"el-icon-info\"\n              icon-color=\"red\"\n              title=\"Are you sure about deleting this data?\"\n              @confirm=\"del(scope.row.id)\"\n          >\n            <el-button type=\"danger\" size=\"mini\" slot=\"reference\">\n              Delete <i class=\"el-icon-remove-outline\"></i>\n            </el-button>\n          </el-popconfirm>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- Pagination -->\n    <el-pagination\n        class=\"pagination\"\n        background\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"pageNum\"\n        :page-sizes=\"[5, 10, 15, 20]\"\n        :page-size=\"pageSize\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n    ></el-pagination>\n\n    <!-- Dialog Form -->\n    <el-dialog\n        title=\"Student Information\"\n        :visible.sync=\"dialogFormVisible\"\n        :modal-append-to-body=\"false\"\n        width=\"30%\"\n        @close=\"listenDialogClose\"\n    >\n      <el-form label-width=\"130px\" size=\"small\" :rules=\"rules\" ref=\"editForm\" :model=\"form\">\n        <el-form-item label=\"Name\" prop=\"name\">\n          <el-input\n              placeholder=\"Please enter content\"\n              v-model=\"form.name\"\n              clearable\n          ></el-input>\n        </el-form-item>\n        <el-form-item\n            label=\"Email\"\n            prop=\"email\"\n            :rules=\"[\n            { required: true, message: 'Please enter email', trigger: 'blur' },\n            { validator: validateEmail, trigger: 'blur' }\n          ]\"\n        >\n          <el-input\n              placeholder=\"Please enter content\"\n              v-model=\"form.email\"\n              clearable\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"Year of Study\" prop=\"grade\">\n          <el-input\n              placeholder=\"Please enter content\"\n              v-model=\"form.grade\"\n              clearable\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"Class\" prop=\"classes\">\n          <el-input\n              placeholder=\"Please enter content\"\n              v-model=\"form.classes\"\n              clearable\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"Gender\" prop=\"gender\">\n          <el-select v-model=\"form.gender\" placeholder=\"Please select gender\" clearable>\n            <el-option label=\"Male\" value=\"man\"></el-option>\n            <el-option label=\"Female\" value=\"woman\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"Major\" prop=\"professional\">\n          <el-input\n              placeholder=\"Please enter content\"\n              v-model=\"form.professional\"\n              clearable\n          ></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">Cancel</el-button>\n        <el-button type=\"primary\" @click=\"save\">Confirm</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"User\",\n  data() {\n    return {\n      // Table data and pagination details\n      tableData: [],\n      total: 0,\n      pageNum: 1,\n      pageSize: 15,\n      name: \"\",\n\n      // Form model for student data\n      form: {\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        grade: \"\",\n        classes: \"\",\n        gender: \"\",\n        professional: \"\"\n      },\n\n      // Selected rows in the table\n      multipleSelection: [],\n      dialogFormVisible: false, // Dialog visibility state\n\n      // Validation rules for form fields\n      rules: {\n        name: [\n          { required: true, message: 'Please enter name', trigger: 'blur' }\n        ],\n        grade: [\n          { required: true, message: 'Please enter grade', trigger: 'blur' },\n          { validator: this.validateAcademicYear, trigger: 'blur' }\n        ],\n        classes: [\n          { required: true, message: 'Please enter class', trigger: 'blur' }\n        ],\n        gender: [\n          { required: true, message: 'Please select gender', trigger: 'change' }\n        ],\n        professional: [\n          { required: true, message: 'Please enter major', trigger: 'blur' }\n        ]\n      }\n    };\n  },\n  created() {\n    // Load initial data on component creation\n    this.load();\n  },\n  methods: {\n    // Validates academic year input\n    validateAcademicYear(rule, value, callback) {\n      const year = Number(value);\n      if (!/^\\d+$/.test(value) || year < 2024) {\n        callback(new Error('Please enter a valid year (≥ 2024)'));\n      } else {\n        callback();\n      }\n    },\n\n    // Fetch data for the table with pagination and search filters\n    load() {\n      this.request.get(\"/student/page\", {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name\n        }\n      }).then(res => {\n        this.tableData = res.data.records;\n        this.total = res.data.total;\n      });\n    },\n\n    // Validates email input\n    validateEmail(rule, value, callback) {\n      const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n      if (!value) {\n        return callback(new Error('Please enter email'));\n      }\n      if (!emailPattern.test(value)) {\n        return callback(new Error('Please enter the correct email format'));\n      }\n      callback();\n    },\n\n    // Handles form submission\n    save() {\n      this.$refs.editForm.validate((valid) => {\n        if (valid) {\n          this.request.post(\"/student\", this.form).then(res => {\n            if (res.code === '200') {\n              this.load();\n              this.$message.success(\"Submit successfully\");\n              this.dialogFormVisible = false;\n            } else {\n              this.$message.error(\"Commit failure\");\n            }\n          });\n        } else {\n          this.$message.error(\"Form validation failed. Please check the input\");\n          return false;\n        }\n      });\n    },\n\n    // Prepares to add a new student\n    handleAdd() {\n      this.dialogFormVisible = true;\n      this.form = {};\n    },\n\n    // Prepares to edit an existing student\n    handleEdit(row) {\n      this.form = row;\n      this.dialogFormVisible = true;\n    },\n\n    // Deletes a specific student by ID\n    del(id) {\n      this.request.delete(\"/student/del/\" + id).then(res => {\n        if (res) {\n          this.$message.success(\"Successfully deleted\");\n          this.load();\n        } else {\n          this.$message.error(\"Deletion failure\");\n        }\n      });\n    },\n\n    // Handles changes in selected table rows\n    handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n\n    // Resets search input and reloads table data\n    reset() {\n      this.name = \"\";\n      this.load();\n    },\n\n    // Handles changes in the page size\n    handleSizeChange(pageSize) {\n      this.pageSize = pageSize;\n      this.load();\n    },\n\n    // Handles changes in the current page number\n    handleCurrentChange(pageNum) {\n      this.pageNum = pageNum;\n      this.load();\n    },\n\n    // Deletes multiple selected students\n    deleteMore() {\n      let ids = this.multipleSelection.map(v => v.id);\n      this.request.post(\"/student/del/batch\", ids).then(res => {\n        if (res.data) {\n          this.$message.success(\"Batch deletion succeeded\");\n          this.load();\n        } else {\n          this.$message.error(\"Batch deletion failed\");\n        }\n      });\n    },\n\n    // Resets the form and clears fields when dialog closes\n    listenDialogClose() {\n      this.$refs.editForm.resetFields();\n      this.form = {};\n    }\n  }\n};\n</script>\n\n<style>\n.student-container {\n  padding: 20px;\n}\n\n/* Header actions styling */\n.header-actions {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.search-bar {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.search-input {\n  width: 300px;\n}\n\n.operation-buttons {\n  display: flex;\n  gap: 10px;\n}\n\n/* Table styling */\n.student-table {\n  margin-bottom: 20px;\n}\n\n/* Pagination styling */\n.pagination {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n/* Table header background */\n.headerBg {\n  background-color: #f5f7fa !important;\n}\n\n/* Button hover effects */\n.el-button {\n  transition: all 0.3s;\n}\n\n.el-button:hover {\n  transform: translateY(-1px);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n/* Form styling */\n.el-dialog__body {\n  padding: 20px 30px;\n}\n\n.el-form-item {\n  margin-bottom: 20px;\n}\n\n/* Responsive layout */\n@media screen and (max-width: 768px) {\n  .header-actions {\n    flex-direction: column;\n    align-items: stretch;\n    gap: 10px;\n  }\n\n  .search-bar {\n    width: 100%;\n  }\n\n  .search-input {\n    flex: 1;\n  }\n\n  .operation-buttons {\n    width: 100%;\n    justify-content: flex-end;\n  }\n}\n</style>\n"]}]}