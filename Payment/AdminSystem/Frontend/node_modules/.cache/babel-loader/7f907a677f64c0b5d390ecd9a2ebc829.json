{"remainingRequest":"D:\\GItHubProjects\\MobileApp_PaymentSystem\\Payment\\AdminSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\GItHubProjects\\MobileApp_PaymentSystem\\Payment\\AdminSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\GItHubProjects\\MobileApp_PaymentSystem\\Payment\\AdminSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GItHubProjects\\MobileApp_PaymentSystem\\Payment\\AdminSystem\\Frontend\\src\\views\\dentify.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\GItHubProjects\\MobileApp_PaymentSystem\\Payment\\AdminSystem\\Frontend\\src\\views\\dentify.vue","mtime":1731935290714},{"path":"D:\\GItHubProjects\\MobileApp_PaymentSystem\\Payment\\AdminSystem\\Frontend\\babel.config.js","mtime":1731236695489},{"path":"D:\\GItHubProjects\\MobileApp_PaymentSystem\\Payment\\AdminSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GItHubProjects\\MobileApp_PaymentSystem\\Payment\\AdminSystem\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\GItHubProjects\\MobileApp_PaymentSystem\\Payment\\AdminSystem\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GItHubProjects\\MobileApp_PaymentSystem\\Payment\\AdminSystem\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJTSWRlbnRpZnkiLAogIHByb3BzOiB7CiAgICAvLyBWZXJpZmljYXRpb24gY29kZSBzdHJpbmcKICAgIGlkZW50aWZ5Q29kZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICIxMjM0IiAvLyBEZWZhdWx0IHZlcmlmaWNhdGlvbiBjb2RlCiAgICB9LAoKICAgIC8vIE1pbmltdW0gZm9udCBzaXplCiAgICBmb250U2l6ZU1pbjogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDI1CiAgICB9LAogICAgLy8gTWF4aW11bSBmb250IHNpemUKICAgIGZvbnRTaXplTWF4OiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMzUKICAgIH0sCiAgICAvLyBNaW5pbXVtIGJhY2tncm91bmQgY29sb3IgdmFsdWUKICAgIGJhY2tncm91bmRDb2xvck1pbjogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDIwMAogICAgfSwKICAgIC8vIE1heGltdW0gYmFja2dyb3VuZCBjb2xvciB2YWx1ZQogICAgYmFja2dyb3VuZENvbG9yTWF4OiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMjIwCiAgICB9LAogICAgLy8gTWluaW11bSBjb2xvciB2YWx1ZSBmb3IgaW50ZXJmZXJlbmNlIGRvdHMKICAgIGRvdENvbG9yTWluOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogNjAKICAgIH0sCiAgICAvLyBNYXhpbXVtIGNvbG9yIHZhbHVlIGZvciBpbnRlcmZlcmVuY2UgZG90cwogICAgZG90Q29sb3JNYXg6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAxMjAKICAgIH0sCiAgICAvLyBXaWR0aCBvZiB0aGUgY2FudmFzCiAgICBjb250ZW50V2lkdGg6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiA5MAogICAgfSwKICAgIC8vIEhlaWdodCBvZiB0aGUgY2FudmFzCiAgICBjb250ZW50SGVpZ2h0OiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMzgKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIEdlbmVyYXRlcyBhIHJhbmRvbSBpbnRlZ2VyIHdpdGhpbiB0aGUgc3BlY2lmaWVkIHJhbmdlCiAgICByYW5kb21OdW0obWluLCBtYXgpIHsKICAgICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4pICsgbWluKTsKICAgIH0sCiAgICAvLyBHZW5lcmF0ZXMgYSByYW5kb20gUkdCIGNvbG9yIHdpdGhpbiB0aGUgc3BlY2lmaWVkIHJhbmdlCiAgICByYW5kb21Db2xvcihtaW4sIG1heCkgewogICAgICBjb25zdCByID0gdGhpcy5yYW5kb21OdW0obWluLCBtYXgpOwogICAgICBjb25zdCBnID0gdGhpcy5yYW5kb21OdW0obWluLCBtYXgpOwogICAgICBjb25zdCBiID0gdGhpcy5yYW5kb21OdW0obWluLCBtYXgpOwogICAgICByZXR1cm4gYHJnYigke3J9LCAke2d9LCAke2J9KWA7CiAgICB9LAogICAgLy8gRHJhdyB0aGUgY2FwdGNoYSBvbiB0aGUgY2FudmFzCiAgICBkcmF3UGljKCkgewogICAgICBjb25zdCBjYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicy1jYW52YXMiKTsKICAgICAgY29uc3QgY3R4ID0gY2FudmFzLmdldENvbnRleHQoIjJkIik7CiAgICAgIGN0eC50ZXh0QmFzZWxpbmUgPSAiYm90dG9tIjsKCiAgICAgIC8vIERyYXcgdGhlIGJhY2tncm91bmQKICAgICAgY3R4LmZpbGxTdHlsZSA9ICIjZTZlY2ZkIjsKICAgICAgY3R4LmZpbGxSZWN0KDAsIDAsIHRoaXMuY29udGVudFdpZHRoLCB0aGlzLmNvbnRlbnRIZWlnaHQpOwoKICAgICAgLy8gRHJhdyB0aGUgdmVyaWZpY2F0aW9uIGNvZGUgY2hhcmFjdGVycwogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuaWRlbnRpZnlDb2RlLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdGhpcy5kcmF3VGV4dChjdHgsIHRoaXMuaWRlbnRpZnlDb2RlW2ldLCBpKTsKICAgICAgfQoKICAgICAgLy8gQWRkIGludGVyZmVyZW5jZSBsaW5lcyBhbmQgZG90cwogICAgICB0aGlzLmRyYXdMaW5lKGN0eCk7CiAgICAgIHRoaXMuZHJhd0RvdChjdHgpOwogICAgfSwKICAgIC8vIERyYXcgaW5kaXZpZHVhbCB0ZXh0IGNoYXJhY3RlcnMgb24gdGhlIGNhbnZhcwogICAgZHJhd1RleHQoY3R4LCB0eHQsIGkpIHsKICAgICAgY3R4LmZpbGxTdHlsZSA9IHRoaXMucmFuZG9tQ29sb3IoNTAsIDE2MCk7IC8vIFJhbmRvbSB0ZXh0IGNvbG9yCiAgICAgIGN0eC5mb250ID0gYCR7dGhpcy5yYW5kb21OdW0odGhpcy5mb250U2l6ZU1pbiwgdGhpcy5mb250U2l6ZU1heCl9cHggU2ltSGVpYDsgLy8gUmFuZG9tIGZvbnQgc2l6ZQoKICAgICAgY29uc3QgeCA9IChpICsgMSkgKiAodGhpcy5jb250ZW50V2lkdGggLyAodGhpcy5pZGVudGlmeUNvZGUubGVuZ3RoICsgMSkpOwogICAgICBjb25zdCB5ID0gdGhpcy5yYW5kb21OdW0odGhpcy5mb250U2l6ZU1heCwgdGhpcy5jb250ZW50SGVpZ2h0IC0gNSk7CiAgICAgIGNvbnN0IGRlZyA9IHRoaXMucmFuZG9tTnVtKC0zMCwgMzApOyAvLyBSYW5kb20gcm90YXRpb24gYW5nbGUKCiAgICAgIC8vIFRyYW5zbGF0ZSBhbmQgcm90YXRlIHRoZSBjYW52YXMgZm9yIHRoZSB0ZXh0CiAgICAgIGN0eC50cmFuc2xhdGUoeCwgeSk7CiAgICAgIGN0eC5yb3RhdGUoZGVnICogTWF0aC5QSSAvIDE4MCk7CiAgICAgIGN0eC5maWxsVGV4dCh0eHQsIDAsIDApOwoKICAgICAgLy8gUmVzZXQgdGhlIGNhbnZhcyB0cmFuc2Zvcm1hdGlvbnMKICAgICAgY3R4LnJvdGF0ZSgtZGVnICogTWF0aC5QSSAvIDE4MCk7CiAgICAgIGN0eC50cmFuc2xhdGUoLXgsIC15KTsKICAgIH0sCiAgICAvLyBEcmF3IGludGVyZmVyZW5jZSBsaW5lcyBvbiB0aGUgY2FudmFzCiAgICBkcmF3TGluZShjdHgpIHsKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA0OyBpKyspIHsKICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSB0aGlzLnJhbmRvbUNvbG9yKDEwMCwgMjAwKTsKICAgICAgICBjdHguYmVnaW5QYXRoKCk7CiAgICAgICAgY3R4Lm1vdmVUbyh0aGlzLnJhbmRvbU51bSgwLCB0aGlzLmNvbnRlbnRXaWR0aCksIHRoaXMucmFuZG9tTnVtKDAsIHRoaXMuY29udGVudEhlaWdodCkpOwogICAgICAgIGN0eC5saW5lVG8odGhpcy5yYW5kb21OdW0oMCwgdGhpcy5jb250ZW50V2lkdGgpLCB0aGlzLnJhbmRvbU51bSgwLCB0aGlzLmNvbnRlbnRIZWlnaHQpKTsKICAgICAgICBjdHguc3Ryb2tlKCk7CiAgICAgIH0KICAgIH0sCiAgICAvLyBEcmF3IGludGVyZmVyZW5jZSBkb3RzIG9uIHRoZSBjYW52YXMKICAgIGRyYXdEb3QoY3R4KSB7CiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMzA7IGkrKykgewogICAgICAgIGN0eC5maWxsU3R5bGUgPSB0aGlzLnJhbmRvbUNvbG9yKDAsIDI1NSk7CiAgICAgICAgY3R4LmJlZ2luUGF0aCgpOwogICAgICAgIGN0eC5hcmModGhpcy5yYW5kb21OdW0oMCwgdGhpcy5jb250ZW50V2lkdGgpLCB0aGlzLnJhbmRvbU51bSgwLCB0aGlzLmNvbnRlbnRIZWlnaHQpLCAxLCAwLCAyICogTWF0aC5QSSk7CiAgICAgICAgY3R4LmZpbGwoKTsKICAgICAgfQogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIC8vIFdhdGNoIGZvciBjaGFuZ2VzIGluIHRoZSB2ZXJpZmljYXRpb24gY29kZSBhbmQgcmVkcmF3IHRoZSBjYW52YXMKICAgIGlkZW50aWZ5Q29kZSgpIHsKICAgICAgdGhpcy5kcmF3UGljKCk7CiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgLy8gRHJhdyB0aGUgY2FwdGNoYSB3aGVuIHRoZSBjb21wb25lbnQgaXMgbW91bnRlZAogICAgdGhpcy5kcmF3UGljKCk7CiAgfQp9Ow=="},{"version":3,"mappings":"AAUA;EACAA;EACAC;IACA;IACAC;MACAC;MACAC;IACA;;IACA;IACAC;MACAF;MACAC;IACA;IACA;IACAE;MACAH;MACAC;IACA;IACA;IACAG;MACAJ;MACAC;IACA;IACA;IACAI;MACAL;MACAC;IACA;IACA;IACAK;MACAN;MACAC;IACA;IACA;IACAM;MACAP;MACAC;IACA;IACA;IACAO;MACAR;MACAC;IACA;IACA;IACAQ;MACAT;MACAC;IACA;EACA;EACAS;IACA;IACAC;MACA;IACA;IAEA;IACAC;MACA;MACA;MACA;MACA;IACA;IAEA;IACAC;MACA;MACA;MACAC;;MAEA;MACAA;MACAA;;MAEA;MACA;QACA;MACA;;MAEA;MACA;MACA;IACA;IAEA;IACAC;MACAD;MACAA;;MAEA;MACA;MACA;;MAEA;MACAA;MACAA;MACAA;;MAEA;MACAA;MACAA;IACA;IAEA;IACAE;MACA;QACAF;QACAA;QACAA,WACA,sCACA,sCACA;QACAA,WACA,sCACA,sCACA;QACAA;MACA;IACA;IAEA;IACAG;MACA;QACAH;QACAA;QACAA,QACA,sCACA,uCACA,GACA,GACA,YACA;QACAA;MACA;IACA;EACA;EACAI;IACA;IACAnB;MACA;IACA;EACA;EACAoB;IACA;IACA;EACA;AACA","names":["name","props","identifyCode","type","default","fontSizeMin","fontSizeMax","backgroundColorMin","backgroundColorMax","dotColorMin","dotColorMax","contentWidth","contentHeight","methods","randomNum","randomColor","drawPic","ctx","drawText","drawLine","drawDot","watch","mounted"],"sourceRoot":"src/views","sources":["dentify.vue"],"sourcesContent":["<template>\n  <div class=\"s-canvas\">\n    <canvas\n        id=\"s-canvas\"\n        :width=\"contentWidth\"\n        :height=\"contentHeight\"\n    ></canvas>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"SIdentify\",\n  props: {\n    // Verification code string\n    identifyCode: {\n      type: String,\n      default: \"1234\", // Default verification code\n    },\n    // Minimum font size\n    fontSizeMin: {\n      type: Number,\n      default: 25,\n    },\n    // Maximum font size\n    fontSizeMax: {\n      type: Number,\n      default: 35,\n    },\n    // Minimum background color value\n    backgroundColorMin: {\n      type: Number,\n      default: 200,\n    },\n    // Maximum background color value\n    backgroundColorMax: {\n      type: Number,\n      default: 220,\n    },\n    // Minimum color value for interference dots\n    dotColorMin: {\n      type: Number,\n      default: 60,\n    },\n    // Maximum color value for interference dots\n    dotColorMax: {\n      type: Number,\n      default: 120,\n    },\n    // Width of the canvas\n    contentWidth: {\n      type: Number,\n      default: 90,\n    },\n    // Height of the canvas\n    contentHeight: {\n      type: Number,\n      default: 38,\n    },\n  },\n  methods: {\n    // Generates a random integer within the specified range\n    randomNum(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    },\n\n    // Generates a random RGB color within the specified range\n    randomColor(min, max) {\n      const r = this.randomNum(min, max);\n      const g = this.randomNum(min, max);\n      const b = this.randomNum(min, max);\n      return `rgb(${r}, ${g}, ${b})`;\n    },\n\n    // Draw the captcha on the canvas\n    drawPic() {\n      const canvas = document.getElementById(\"s-canvas\");\n      const ctx = canvas.getContext(\"2d\");\n      ctx.textBaseline = \"bottom\";\n\n      // Draw the background\n      ctx.fillStyle = \"#e6ecfd\";\n      ctx.fillRect(0, 0, this.contentWidth, this.contentHeight);\n\n      // Draw the verification code characters\n      for (let i = 0; i < this.identifyCode.length; i++) {\n        this.drawText(ctx, this.identifyCode[i], i);\n      }\n\n      // Add interference lines and dots\n      this.drawLine(ctx);\n      this.drawDot(ctx);\n    },\n\n    // Draw individual text characters on the canvas\n    drawText(ctx, txt, i) {\n      ctx.fillStyle = this.randomColor(50, 160); // Random text color\n      ctx.font = `${this.randomNum(this.fontSizeMin, this.fontSizeMax)}px SimHei`; // Random font size\n\n      const x = (i + 1) * (this.contentWidth / (this.identifyCode.length + 1));\n      const y = this.randomNum(this.fontSizeMax, this.contentHeight - 5);\n      const deg = this.randomNum(-30, 30); // Random rotation angle\n\n      // Translate and rotate the canvas for the text\n      ctx.translate(x, y);\n      ctx.rotate((deg * Math.PI) / 180);\n      ctx.fillText(txt, 0, 0);\n\n      // Reset the canvas transformations\n      ctx.rotate((-deg * Math.PI) / 180);\n      ctx.translate(-x, -y);\n    },\n\n    // Draw interference lines on the canvas\n    drawLine(ctx) {\n      for (let i = 0; i < 4; i++) {\n        ctx.strokeStyle = this.randomColor(100, 200);\n        ctx.beginPath();\n        ctx.moveTo(\n            this.randomNum(0, this.contentWidth),\n            this.randomNum(0, this.contentHeight)\n        );\n        ctx.lineTo(\n            this.randomNum(0, this.contentWidth),\n            this.randomNum(0, this.contentHeight)\n        );\n        ctx.stroke();\n      }\n    },\n\n    // Draw interference dots on the canvas\n    drawDot(ctx) {\n      for (let i = 0; i < 30; i++) {\n        ctx.fillStyle = this.randomColor(0, 255);\n        ctx.beginPath();\n        ctx.arc(\n            this.randomNum(0, this.contentWidth),\n            this.randomNum(0, this.contentHeight),\n            1,\n            0,\n            2 * Math.PI\n        );\n        ctx.fill();\n      }\n    },\n  },\n  watch: {\n    // Watch for changes in the verification code and redraw the canvas\n    identifyCode() {\n      this.drawPic();\n    },\n  },\n  mounted() {\n    // Draw the captcha when the component is mounted\n    this.drawPic();\n  },\n};\n</script>\n\n"]}]}